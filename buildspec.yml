version: 0.2

batch:
  fast-fail: false

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Login to ECR first
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo Using the following ECR repository URI $REPOSITORY_URI
      - echo Using the following ECR repository name $IMAGE_REPO_NAME
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - echo docker push $REPOSITORY_URI/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $REPOSITORY_URI/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > image.url
      - export imageTag=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo Done
artifacts:
  files:
    - image.url
  name: image_url
  discard-paths: yes
env:
  exported-variables:
    - imageTag
